From a90d3a3881cf23e87d0cda011b41673728ba3c5d Mon Sep 17 00:00:00 2001
From: TaoJiang <tao.jiang_2@nxp.com>
Date: Fri, 15 Jul 2022 09:17:13 +0530
Subject: [PATCH 230/274] LF6570: IMX8M VPU:solve fps setting error

1.move fps setting to output queue

Signed-off-by: TaoJiang <tao.jiang_2@nxp.com>
---
 drivers/mxc/hantro_v4l2/vsi-v4l2-enc.c | 59 ++++++++++++--------------
 1 file changed, 28 insertions(+), 31 deletions(-)

diff --git a/drivers/mxc/hantro_v4l2/vsi-v4l2-enc.c b/drivers/mxc/hantro_v4l2/vsi-v4l2-enc.c
index 086c90668..96f28acaf 100755
--- a/drivers/mxc/hantro_v4l2/vsi-v4l2-enc.c
+++ b/drivers/mxc/hantro_v4l2/vsi-v4l2-enc.c
@@ -125,40 +125,36 @@ static int vsi_enc_s_parm(struct file *filp, void *priv, struct v4l2_streamparm
 	v4l2_klog(LOGLVL_CONFIG, "%s", __func__);
 	if (!vsi_v4l2_daemonalive())
 		return -ENODEV;
+
 	if (!isvalidtype(parm->type, ctx->flag))
 		return -EINVAL;
 
+	if (!binputqueue(parm->type))
+		return -EINVAL;
+
 	if (mutex_lock_interruptible(&ctx->ctxlock))
 		return -EBUSY;
-	if (binputqueue(parm->type)) {
-		memset(parm->parm.output.reserved, 0, sizeof(parm->parm.output.reserved));
-		if (!parm->parm.output.timeperframe.denominator)
-			parm->parm.output.timeperframe.denominator = ctx->mediacfg.outputparam.timeperframe.denominator;
-		else
-			ctx->mediacfg.outputparam.timeperframe.denominator = parm->parm.output.timeperframe.denominator;
-		if (!parm->parm.output.timeperframe.numerator)
-			parm->parm.output.timeperframe.numerator = ctx->mediacfg.outputparam.timeperframe.numerator;
-		else
-			ctx->mediacfg.outputparam.timeperframe.numerator = parm->parm.output.timeperframe.numerator;
-		ctx->mediacfg.encparams.general.inputRateNumer = parm->parm.output.timeperframe.denominator;
-		ctx->mediacfg.encparams.general.inputRateDenom = parm->parm.output.timeperframe.numerator;
-		parm->parm.output.capability = V4L2_CAP_TIMEPERFRAME;
-	} else {
-		memset(parm->parm.capture.reserved, 0, sizeof(parm->parm.capture.reserved));
-		if (!parm->parm.capture.timeperframe.denominator)
-			parm->parm.capture.timeperframe.denominator = ctx->mediacfg.capparam.timeperframe.denominator;
-		else
-			ctx->mediacfg.capparam.timeperframe.denominator = parm->parm.capture.timeperframe.denominator;
-		if (!parm->parm.capture.timeperframe.numerator)
-			parm->parm.capture.timeperframe.numerator = ctx->mediacfg.capparam.timeperframe.numerator;
-		else
-			ctx->mediacfg.capparam.timeperframe.numerator = parm->parm.capture.timeperframe.numerator;
-		ctx->mediacfg.encparams.general.outputRateNumer = parm->parm.capture.timeperframe.denominator;
-		ctx->mediacfg.encparams.general.outputRateDenom = parm->parm.capture.timeperframe.numerator;
-		parm->parm.capture.capability = V4L2_CAP_TIMEPERFRAME;
-	}
+
+	memset(parm->parm.output.reserved, 0, sizeof(parm->parm.output.reserved));
+	if (!parm->parm.output.timeperframe.denominator)
+		parm->parm.output.timeperframe.denominator = ctx->mediacfg.outputparam.timeperframe.denominator;
+	else
+		ctx->mediacfg.outputparam.timeperframe.denominator = parm->parm.output.timeperframe.denominator;
+	if (!parm->parm.output.timeperframe.numerator)
+		parm->parm.output.timeperframe.numerator = ctx->mediacfg.outputparam.timeperframe.numerator;
+	else
+		ctx->mediacfg.outputparam.timeperframe.numerator = parm->parm.output.timeperframe.numerator;
+	ctx->mediacfg.encparams.general.inputRateNumer = parm->parm.output.timeperframe.denominator;
+	ctx->mediacfg.encparams.general.inputRateDenom = parm->parm.output.timeperframe.numerator;
+	ctx->mediacfg.encparams.general.outputRateNumer = parm->parm.output.timeperframe.denominator;
+	ctx->mediacfg.encparams.general.outputRateDenom = parm->parm.output.timeperframe.numerator;
+	parm->parm.output.capability = V4L2_CAP_TIMEPERFRAME;
+
 	set_bit(CTX_FLAG_CONFIGUPDATE_BIT, &ctx->flag);
 	mutex_unlock(&ctx->ctxlock);
+
+	v4l2_klog(LOGLVL_BRIEF, "%lx:%s set fps number %d,denom %d\n",
+		ctx->ctxid, __func__,  ctx->mediacfg.encparams.general.inputRateNumer, ctx->mediacfg.encparams.general.inputRateDenom);
 	return 0;
 }
 
@@ -171,10 +167,11 @@ static int vsi_enc_g_parm(struct file *filp, void *priv, struct v4l2_streamparm
 		return -ENODEV;
 	if (!isvalidtype(parm->type, ctx->flag))
 		return -EINVAL;
-	if (binputqueue(parm->type))
-		parm->parm.output = ctx->mediacfg.outputparam;
-	else
-		parm->parm.capture = ctx->mediacfg.capparam;
+	if (!binputqueue(parm->type))
+		return -EINVAL;
+
+	parm->parm.output = ctx->mediacfg.outputparam;
+
 	return 0;
 }
 
-- 
2.25.1

